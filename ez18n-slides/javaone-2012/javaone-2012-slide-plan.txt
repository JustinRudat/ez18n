Title : Multidevice content display and a Smart Use of Annotation ProcessingAbstract:This session presents a multidevice content display survivor guide and discusses smart use of annotation processing. Based on some real-life stories and best practices collected while coding Java applications, it includes the following stories for you: 1. Mr. Apt loves you! APT processing explained 2. Embedded i18n and encoding survivor guide 3. Mobile Me : the ez18n project Bonus: i18n crowdsourcingLevel: IntermediateMultidevice Content Display:* Application web multi écran (multiple spécialisations par langues)** Application web (webcontent, label, css (for example images sizes), RTL as bonus)*** Double view : mobile/web, fr/en.*** Sample localization management : Crowd sourcing*** Sample runtime checkup : (spell & i18n coverage)*** Code to maintain that* Explain the underlying problems** Single point of declaration** Content life cycle : reference, add-ons** Quality of the delivery : build, qa, runtimeSmart Use of Annotation Processing:* APT for dummies** Because @Retention(RetentionPolicy.SOURCE) ** Code génération à base d'annotation et parsing de code (non runtime)** Use a Templating (reuse ant)** Best use cases (generate patterns, reports, tests, ...)** Use APT with Javac, Maven, IDE Eclipse, Idea (Builder)** Create a Processor* ez18n sample** @i18nContent, @i18nLabel, @i18nImage, (replace @Label et @LabelBundle)** @i18nResourceBundleProvider (.properties), @i18nContentProvider (getContent('web', 'fr'))** Generate .properties files (no more encoding issues !)** Generate the xsl translation file** Generate Runtime localisation checkup tests (Embedded JUnit)** Generate Runtime Spellchecker (jazzy) sample** Génération d'une pseudo localisation************* 2 démos :************** Show case : Multidevice Content Display : JSP Mobile/Web with @i18nContent* ALM powerred by APT : Embedded tests + Crowd sourcing + SpellcheckerDemo:* L'application reçoit une nouvelle langue* L'application support une nouvelle contrainte d'affichage*************CODE CHANGES:************** Injection des profils d'utilisation ?* Déclaration des profiles ou extensibilité ? (site/web ne me semble pas logique dans l'annotation vu que langue n'y est pas).* EMessagesSiteBundle -> Messages_site_en_FR* Génération du fichier properties : Messages_site_fr.properties